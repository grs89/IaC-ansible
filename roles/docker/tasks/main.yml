---
# Role: docker
# Descripción: Instalación de Docker Engine, CLI, Containerd y plugins
# Autor: Sistema Ansible
# Versión: 2.0

- name: Determinar arquitectura del sistema
  set_fact:
    docker_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"

- name: Determinar tipo de distribución
  set_fact:
    docker_distro: "{{ ansible_distribution | lower }}"
    docker_codename: "{{ ansible_lsb.codename | default(ansible_distribution_release) }}"

- name: Mostrar información detectada
  debug:
    msg:
      - "Arquitectura: {{ docker_arch }}"
      - "Distribución: {{ docker_distro }}"
      - "Código: {{ docker_codename }}"
      - "Arquitectura original: {{ ansible_architecture }}"

- name: Instalar dependencias necesarias
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

- name: Crear directorio de llaves de apt
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  when: docker_distro == "ubuntu"

- name: Descargar la llave GPG de Docker (Ubuntu)
  get_url:
    url: https://download.docker.com/linux/{{ docker_distro }}/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
  when: docker_distro == "ubuntu"

- name: Descargar la llave GPG de Docker (Debian)
  get_url:
    url: https://download.docker.com/linux/{{ docker_distro }}/gpg
    dest: /etc/apt/keyrings/docker.gpg
    mode: '0644'
  when: docker_distro == "debian"

- name: Agregar el repositorio de Docker (Ubuntu)
  apt_repository:
    repo: "deb [arch={{ docker_arch }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/{{ docker_distro }} {{ docker_codename }} stable"
    filename: docker
    state: present
    update_cache: yes
  when: docker_distro == "ubuntu"

- name: Agregar el repositorio de Docker (Debian)
  apt_repository:
    repo: "deb [arch={{ docker_arch }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/{{ docker_distro }} {{ docker_codename }} stable"
    filename: docker
    state: present
    update_cache: yes
  when: docker_distro == "debian"

- name: Instalar Docker Engine, CLI, containerd y plugin Compose
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: "{{ docker_package_state | default('present') }}"
    update_cache: yes

- name: Verificar instalación de Docker
  command: docker --version
  register: docker_version
  changed_when: false

- name: Mostrar versión de Docker instalada
  debug:
    msg: "{{ docker_version.stdout }}"

- name: Habilitar y arrancar el servicio Docker
  systemd:
    name: docker
    state: "{{ docker_service_state | default('started') }}"
    enabled: "{{ docker_service_enabled | default(true) }}"

- name: Añadir usuario al grupo docker
  user:
    name: "{{ item }}"
    groups: docker
    append: yes
  loop: "{{ docker_users | default([]) }}"
  when: docker_users is defined


